# set is short for set-option | bind is short for bindkey
# -g = global | -a = append |

# -- Settings -------------------------------------------------------------------
set -g automatic-rename off       # rename window to reflect current program
set -g base-index 1               # start windows numbering at 1
set -g display-panes-time 800     # slightly longer pane indicators display time
set -g display-time 1000          # slightly longer status messages display time
set -g history-limit 5000         # boost history
set -g mode-keys vi               # vim like keys
set -g monitor-activity on
set -g mouse on                   # Enable mouse
set -g pane-base-index 1          # make pane numbering consistent with windows
set -g renumber-windows on        # renumber windows when a window is closed
set -g status-interval 10         # redraw status line every 10 seconds
set -g visual-activity off
set -g visual-bell off            # disable annoying bells
set -g xterm-keys on
set -s escape-time 0              # faster command sequences
set -s focus-events on            # needed as on tmux 1.9 and up (defaults to off).
set -sg repeat-time 100           # increase repeat timeout
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# -- Color palette  ------------------------------------------------------------
bg="#413654"
fg="#888889"
c1="#c678dd"

# -- Appearance  ---------------------------------------------------------------
set -ag status-position top
set -ag status-justify centre                        # Center window names
# set -ag pane-border-status top                     # Display a border below status line
# set -ag pane-border-format ' '
set -g window-status-current-format " #[bold]#I #W "    # Active window (format)
set -g window-status-format         " #I #W "              # Inactive windows (format)

# Panes and windows colors
set -ag pane-active-border-style     fg=$bg
set -ag pane-border-style            fg=$c1
set -ag window-status-current-style  fg=$bg,bg=$c1
set -ag window-status-style          fg=$fg

# Status colors
set -ag status-style                 bg=$bg
set -g status-left                  "#[bold fg=$c1] #S → "
set -g status-right                 "#[bold fg=$c1] %d/%m   %R "
set -ag message-style                bg=$bg,fg=$fg          # message text

# -- Mappings ------------------------------------------------------------------
unbind C-b; unbind h; unbind j; unbind k; unbind l; unbind C-t;

set -g prefix C-a
bind C-a send-prefix
bind c new-window
bind x confirm kill-pane
bind X confirm kill-window
bind - split-window -v            # split current window horizontally
bind v split-window -h            # split current window vertically
bind space last-window       # Toggle between current and last window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind -n M-j select-pane -t :.+
# bind -n M-k select-pane -t :.-
bind -n M-h previous-window
bind -n M-l next-window

# Pane resizing
bind -n C-Left resize-pane -L 2
bind -n C-Down resize-pane -D 2
bind -n C-Up resize-pane -U 2
bind -n C-Right resize-pane -R 2

# Pane swapping
bind -r '<' swap-window -d -t '{previous}' # Move window left.
bind -r '>' swap-window -d -t '{next}' # Move window right.
# bind > swap-pane -D             # swap current pane with the next one
# bind < swap-pane -U             # swap current pane with the previous one

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display ' ~/.config/tmux/tmux.conf sourced'

# bind l send-keys 'C-l'
# bind C-l send-keys 'C-l'


## Plugins
# https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind -T copy-mode-vi 'C-h' select-pane -L
# bind -T copy-mode-vi 'C-j' select-pane -D
# bind -T copy-mode-vi 'C-k' select-pane -U
# bind -T copy-mode-vi 'C-l' select-pane -R
