#!/usr/bin/env bash

# Script name: dotfiles
# Description: Script to deploy my dotfiles easily.
# Dependencies: git, curl, zsh

export repo_host="https://github.com"
export repo_path="/martinsione/dotfiles"
export dotfiles_dir="$HOME/.dotfiles"
export DISTRO=$(lsb_release -is)

_dirs=(
  ~/.cache/zsh
  ~/.config/Code/User
  ~/Documents
  ~/Downloads
  ~/Pictures
  ~/Workspace
)

_symlinks=(
  .config/Code/User/keybindings.json
  .config/Code/User/settings.json
  .config/git
  .config/gtk-3.0/bookmarks
  .config/htop
  .config/kitty
  .config/luaformatter
  .config/nvim
  .config/ranger
  .config/tmux
  .config/zsh
  .local/bin
  .zshrc
)

## End of configuration
set -e

install_dependencies() {
  [ $DISTRO == "Arch" ] && sudo pacman -Syy && sudo pacman -S --noconfirm git curl zsh && return
  [ $DISTRO == "Ubuntu" ] || [ $DISTRO == "Pop" ] && sudo apt update && sudo apt upgrade -y && sudo apt install -y git curl zsh && return
}

clone_repo() {
  if [ -d "$HOME/dotfiles" ]; then
    mv "$HOME/dotfiles" "${dotfiles_dir}";
  elif [ ! -d "${dotfiles_dir}" ]; then
    git clone "${repo_host}${repo_path}" "${dotfiles_dir}"
  fi

  if [ -d "${dotfiles_dir}" ]; then 
    cd ${dotfiles_dir} && git submodule update --init --recursive
  fi
}

symlink_files() {
  for name in "${_symlinks[@]}"; do
    if [ ! -e "$name" ]; then
      ln -srfv "${dotfiles_dir}/src/${name}" "$HOME/${name}"
    else
      echo "${name} already exists."
    fi
  done
}

create_dirs() {
  for name in "${_dirs[@]}"; do mkdir -p "${name}"; done
}

add_echo_cancelation() {
sudo tee -a /etc/pulse/default.pa > /dev/null <<EOT
load-module module-echo-cancel aec_method=webrtc source_name=noechosource sink_name=noechosink
set-default-source noechosource
set-default-sink noechosink
EOT
}

mount_drive() {
  read -p "Do you want to mount disk to /mnt/s (y/n): " -n 1 -r
  echo -e '\n'
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    sudo mkdir -p /mnt/s
    echo 'UUID=0492de4e-821d-48d4-970f-7a7ccb869fe0 /mnt/s ext4 rw,relatime 0 2' | sudo tee -a /etc/fstab
    echo -e 'Mounted drive correctly.\n' 
  fi
}

change_shell() {
  chsh -s $(which zsh)
  sh -c "$(curl -fsSL https://starship.rs/install.sh)"
}


## Start of the script
install_dependencies
clone_repo
create_dirs
symlink_files
add_echo_cancelation
mount_drive
change_shell
